{"version":3,"sources":["photos/background/whiteCircle.png","photos/background/earthmap1k.jpg","photos/spaceships/diplomacy_rocket.png","photos/spaceships/combat_rocket.png","photos/spaceships/biology_rocket.png","BoardSpace.js","Board.js","PlanetPage.js","signin.js","signup.js","GameOver.js","CharacterSelectPage.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BoardSpace","state","ship_name","componentDidMount","shipName","localStorage","getItem","setState","hasWon","props","extraClassName","row","this","col","boardSpaceType","spaceShipClass","spaceship","className","onClick","Component","Board","background_color","border_color","text_color","color_scheme","parsedScheme","JSON","parse","background_clr","border_clr","font_clr","goToNextPage","planet","location_name","history","push","checkPlanet","key","hasOwnProperty","grid","location_description","location_image","src","alt","style","color","backgroundColor","shipHull","shipFuel","shipCredits","map","rowIndex","boardSpace","boardSpaceIndex","spaceShipPosition","handleSpacePress","PlanetPage","event","event_choices","eventChoices","results","rewards","rollNeeded","userRoll","choiceMade","index","chosenChoice","roll_type","roll_needed","ship","shipStats","Math","ceil","random","arr","successArray","success_fuel","success_credit","success_health","result","sucess","failureArray","failure_fuel","failure_credit","failure_health","failure","applyShipStats","clearPlanetFunction","request","get","id","fetchedEvent","body","event_image","event_name","event_description","choice_description","Signin","email","password","handleSubmit","e","a","preventDefault","post","token","tokenChange","handleChange","newState","target","name","value","goToSignUp","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setSize","mount","appendChild","domElement","starGeo","i","star","velocity","acceleration","vertices","sprite","load","whiteCircle","starMaterial","stars","add","position","z","x","PI","animate","forEach","p","verticesNeedUpdate","rotation","requestAnimationFrame","render","ref","onSubmit","onChange","to","Signup","score","set","goToSignIn","GameOver","final_message","times_won","geometry","material","loadTexture","earthMap","cube","y","hull","fuel","put","winData","console","log","CharacterSelectPage","submitHandle","type","defaultChecked","diplomacy","combat","science","About","App","possiblePosition","ship_image","ship_fuel","ship_hull","ship_credits","used_item_slots","max_item_slots","ship_stats","base_combat","base_diplomacy","base_science","shipInitialSelect","planets_visited","planets_coordinates","has_won","no_fuel","myToken","setItem","health","credits","newHealth","newFuel","newCredits","coordinatesInclude","array","stringPosition","stringify","some","item","isMoveInRange","attemptedClick","coordinates","locationReveal","fetchedPlanet","planetIndex","floor","length","includes","planet_visited_array","proposedPosition","updateShipSelection","spaceshipSelectHandle","shipChoice","userShip","parsedObject","text","themeColors","schemes","colors","colorScheme","shipcredits","path","exact","routerProps","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mWCGtBC,G,kNACjBC,MAAM,CACFC,UAAW,I,EAEfC,kBAAoB,WAChB,IAAMC,EAAWC,aAAaC,QAAQ,aACtC,EAAKC,SAAU,CAACL,UAAWE,I,EAG/BI,OAAS,WACF,EAAKC,MAAMD,Q,uDAIR,IAKFE,EALC,OACCC,EAAMC,KAAKH,MAAME,IACjBE,EAAMD,KAAKH,MAAMI,IAEjBC,EAAiBF,KAAKH,MAAMK,eAE9BC,EAAiB,GAmBrB,OAjBsB,IAAnBD,EACCJ,EAAiB,QACQ,IAAnBI,EACNJ,EAAiB,SACQ,IAAnBI,EACNJ,EAAiB,UACQ,IAAnBI,EACNJ,EAAiB,OACQ,IAAnBI,IACNJ,EAAiB,WAGlBC,IAAQC,KAAKH,MAAMO,UAAU,IAAMH,IAAQD,KAAKH,MAAMO,UAAU,KAE/DD,EAAiB,aAIjB,yBAAKE,UAAS,qBAAgBP,EAAhB,YAAkCK,GAChDG,QAAS,kBAAM,EAAKT,MAAMS,QAAQP,EAAKE,U,GAzCXM,cCCnBC,G,kNACjBnB,MAAQ,CACJoB,iBAAkB,GAClBC,aAAc,GACdC,WAAY,I,EAEhBpB,kBAAoB,WAChB,IAAMqB,EAAenB,aAAaC,QAAQ,gBACpCmB,EAAeC,KAAKC,MAAMH,GAEhC,EAAKjB,SAAS,CAAEc,iBAAkBI,EAAaG,eAC/CN,aAAcG,EAAaI,WAC3BN,WAAYE,EAAaK,Y,EAI7BC,aAAe,WAC4B,eAApC,EAAKtB,MAAMuB,OAAOC,gBAEY,IAAtB,EAAKxB,MAAMD,OADlB,EAAKC,MAAMyB,QAAQC,KAAK,aAGlB,EAAK1B,MAAMuB,QACjB,EAAKvB,MAAMyB,QAAQC,KAAK,Y,EAKhCC,YAAc,SAACJ,GACX,IAAI,IAAIK,KAAOL,EACX,GAAGA,EAAOM,eAAeD,GACzB,OAAO,EAEX,OAAO,G,uDAGD,IAAD,OAGDL,EAASpB,KAAKwB,YAAYxB,KAAKH,MAAMuB,QAEnCO,EAAO3B,KAAKH,MAAM8B,KACxB,OACA,iCACI,yBAAKtB,UAAU,iBAEf,yBAAKA,UAAU,sBAEPL,KAAKH,MAAMuB,QAAU,yBAAKf,UAAU,iBAChC,yBAAKA,UAAU,aACX,2CAAiBL,KAAKH,MAAMuB,OAAOC,eACnC,6CAAmBrB,KAAKH,MAAMuB,OAAOQ,sBACpCR,EACC,wEACA,4BAAQf,UAAU,SAASC,QAASN,KAAKmB,cAAzC,uBAGN,6BACKnB,KAAKH,MAAMuB,OAAOS,gBAAkB,yBAAKxB,UAAU,eAAeyB,IAAK9B,KAAKH,MAAMuB,OAAOS,eAAgBE,IAAI,QAM9H,yBAAK1B,UAAU,uBACX,yBAAKA,UAAU,4BAA4B2B,MACvC,CAACC,MAAM,IAAD,OAAMjC,KAAKX,MAAMsB,YACvBuB,gBAAgB,IAAD,OAAMlC,KAAKX,MAAMoB,oBAEhC,4CACA,yCAAeT,KAAKH,MAAMsC,UAC1B,yCAAenC,KAAKH,MAAMuC,UAC1B,uCAAapC,KAAKH,MAAMwC,gBAIpC,yBAAKhC,UAAU,mBACVsB,EAAKW,KAAI,SAACvC,EAAKwC,GACZ,OACI,yBAAKd,IAAKc,GAEFxC,EAAIuC,KAAI,SAACE,EAAYC,GACjB,OAAO,kBAAC,EAAD,CACPhB,IAAKgB,EACLvC,eAAgBsC,EAChBpC,UAAW,EAAKP,MAAM6C,kBACtB3C,IAAKwC,EACLtC,IAAKwC,EACLnC,QAAS,SAACP,EAAKE,GAAN,OAAc,EAAKJ,MAAM8C,iBAAiB5C,EAAKE,mB,GAvFrDM,c,gBCAdqC,G,kNACjBvD,MAAQ,CACJwD,MAAO,CACHC,cAAe,IAEnBC,aAAc,GACdC,QAAS,GACTC,QAAS,GACTC,WAAY,GACZC,SAAU,I,EASdC,WAAa,SAACC,GACV,IAAIC,EAAe,EAAKjE,MAAM0D,aAAaM,GACvCE,EAAYD,EAAaC,UACzBL,EAAaI,EAAaE,YAC1BC,EAAO,EAAK5D,MAAM6D,UAClBP,EAAWQ,KAAKC,KAAqB,GAAhBD,KAAKE,UAE1BC,EAAM,GACV,IAFAX,GAAYM,EAAK,QAAD,OAASF,MAEVL,EAAY,CACvB,IAAMa,EAAe,CAACT,EAAaL,QAAQe,aAAcV,EAAaL,QAAQgB,eAAgBX,EAAaL,QAAQiB,gBACnHJ,EAAMC,EAEN,EAAKpE,SAAS,CAAEqD,QAASM,EAAaa,OAAOC,OAAQnB,QAASc,EAAcZ,SAAUA,EAAUD,WAAYA,QACzG,CACH,IAAMmB,EAAe,CAACf,EAAaL,QAAQqB,aAAchB,EAAaL,QAAQsB,eAAgBjB,EAAaL,QAAQuB,gBACnHV,EAAMO,EACN,EAAK1E,SAAS,CAAEqD,QAASM,EAAaa,OAAOM,QAASxB,QAASoB,EAAclB,SAAUA,EAAUD,WAAYA,IAEjH,EAAKrD,MAAM6E,eAAeZ,EAAI,GAAIA,EAAI,GAAIA,EAAI,K,EAGlD3C,aAAe,WACR,EAAKtB,MAAMsC,SAAW,GAAK,EAAKtC,MAAMuC,SAAW,GAChD,EAAKvC,MAAMyB,QAAQC,KAAK,UAExB,EAAK1B,MAAMsC,UAAY,GACvB,EAAKtC,MAAMyB,QAAQC,KAAK,aAExB,EAAK1B,MAAMuC,UAAY,GACvB,EAAKvC,MAAMyB,QAAQC,KAAK,aAE5B,EAAK1B,MAAM8E,uB,oMApCcC,IAAQC,IAAR,0DAA+D7E,KAAKH,MAAMuB,OAAO0D,K,OAAtGC,E,OACEhC,EAAegC,EAAaC,KAAK,GAAGlC,cAAcR,KAAI,SAAAO,GAAK,OAAI/B,KAAKC,MAAM8B,MAChF7C,KAAKL,SAAS,CAAEkD,MAAOkC,EAAaC,KAAK,GAAIjC,aAAcA,I,qIAqCrD,IAAD,OACL,OACI,yBAAK1C,UAAU,yBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,cAAcyB,IAAK9B,KAAKX,MAAMwD,MAAMoC,YAAalD,IAAI,MAExE,yBAAK1B,UAAU,gBACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,SAASL,KAAKX,MAAMwD,MAAMqC,YACvC,2BAAIlF,KAAKX,MAAMwD,MAAMsC,oBAEzB,yBAAK9E,UAAU,kBACbL,KAAKX,MAAM2D,SAAWhD,KAAKX,MAAMwD,MAAMC,cAAcR,KAAI,SAAAO,GAAK,OAAI/B,KAAKC,MAAM8B,MAAQP,KACnF,SAACO,EAAOQ,GAAR,OAAkB,6BACd,2BAAIR,EAAMuC,oBAEV,4BAAQ/E,UAAU,SAASC,QAAU,kBAAM,EAAK8C,WAAWC,KAA3D,eAMXrD,KAAKX,MAAM2D,SAAW,yBAAK3C,UAAU,kBAClC,2BAAIL,KAAKX,MAAM2D,SACf,2CAAiBhD,KAAKX,MAAM6D,WAA5B,4BAAiElD,KAAKX,MAAM8D,SAA5E,KACA,4BACI,4CAAkBnD,KAAKX,MAAM4D,QAAQ,IACrC,4CAAkBjD,KAAKX,MAAM4D,QAAQ,IACrC,8CAAoBjD,KAAKX,MAAM4D,QAAQ,KAG3C,4BAAQ5C,UAAU,SAASC,QAASN,KAAKmB,cAAzC,+B,GAnFoBZ,c,gCCGnB8E,E,4MAsDjBhG,MAAQ,CACJiG,MAAO,GACPC,SAAU,I,EAGdC,a,uCAAe,WAAMC,GAAN,eAAAC,EAAA,6DACXD,EAAEE,iBADS,kBAIWf,IAAQgB,KAAK,uDAAwD,EAAKvG,OAJrF,OAIHwG,EAJG,OAKP,EAAKhG,MAAMiG,YAAYD,EAAMb,KAAKa,OAClC,EAAKhG,MAAMyB,QAAQC,KAAK,oBANjB,gDAQP,EAAK5B,SAAS,CAAE8E,QAAS,UARlB,yD,wDAYfsB,aAAe,SAACN,GACZ,IAAMO,EAAW,GACjBA,EAASP,EAAEQ,OAAOC,MAAQT,EAAEQ,OAAOE,MACnC,EAAKxG,SAASqG,I,EAElBI,WAAa,WACT,EAAKvG,MAAMyB,QAAQC,KAAK,M,kEA3ExB,IAAI8E,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAyB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KACrFC,EAAW,IAAIL,IACnBK,EAASC,QAASJ,OAAOC,WAAYD,OAAOE,aAG5C1G,KAAK6G,MAAMC,YAAaH,EAASI,YAEjC,IADA,IAAIC,EAAU,IAAIV,IACVW,EAAE,EAAIA,EAAE,IAAMA,IAAK,CACvB,IAAIC,EAAO,IAAIZ,IACK,IAAhB3C,KAAKE,SAAiB,IACN,IAAhBF,KAAKE,SAAiB,IACN,IAAhBF,KAAKE,SAAiB,KAE1BqD,EAAKC,SAAW,EAChBD,EAAKE,aAAe,KACpBJ,EAAQK,SAAS9F,KAAK2F,GAE1B,IAAII,GAAS,IAAIhB,KAAsBiB,KAAKC,KACxCC,EAAe,IAAInB,IAAqB,CACxCrE,MAAO,SACPqF,OAAQ,GACRhF,IAAKgF,IAELI,EAAQ,IAAIpB,IAAaU,EAASS,GACtCpB,EAAMsB,IAAID,GAKVnB,EAAOqB,SAASC,EAAI,EACpBtB,EAAOqB,SAASE,EAAInE,KAAKoE,GAAG,GACd,SAAVC,IACAhB,EAAQK,SAASY,SAAQ,SAAAC,GACrBA,EAAEf,UAAYe,EAAEd,aAChBc,EAAEL,GAAKK,EAAEf,SACNe,EAAEL,EAAI,MACLK,EAAEL,GAAK,IACPK,EAAEf,SAAW,MAGrBH,EAAQmB,oBAAqB,EAC7BT,EAAMU,SAASP,GAAK,KAEtBQ,sBAAuBL,GAGvBrB,EAAS2B,OAAQjC,EAAOE,GAE1ByB,K,+BA6BM,IAAD,SACqBhI,KAAKX,MAAxBiG,EADF,EACEA,MAAOC,EADT,EACSA,SACd,OACI,oCACR,yBAAKgD,IAAK,SAAAA,GAAG,OAAK,EAAK1B,MAAQ0B,KAC/B,8BAGJ,yBAAKlI,UAAU,WACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,cACf,0BAAMA,UAAU,8BAAhB,SAGI,0BAAMmI,SAAUxI,KAAKwF,aAAcnF,UAAU,cACzC,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,cACX,wCAEI,2BAAOoI,SAAUzI,KAAK+F,aAAcG,KAAK,QAAQC,MAAOb,MAGpE,yBAAKjF,UAAU,oBACX,2CAEI,2BAAOoI,SAAUzI,KAAK+F,aAAcG,KAAK,WAAWC,MAAOZ,OAI/D,yBAAKlF,UAAU,sBACX,yBAAKA,UAAU,iBACX,4BAAQA,UAAU,qBAAlB,cAIfL,KAAKX,MAAMoF,SAAW,iEACvB,4BAAQpE,UAAU,oBAAoBC,QAASN,KAAKoG,YAApD,kBACA,kBAAC,IAAD,CAAMsC,GAAG,UAAS,uBAAG5D,GAAG,eAAN,qB,GArHMvE,aCDfoI,E,4MAqDjBtJ,MAAQ,CACJiG,MAAO,GACPC,SAAU,I,EAGdC,a,uCAAe,WAAMC,GAAN,eAAAC,EAAA,6DACXD,EAAEE,iBADS,kBAIWf,IAAQgB,KAAK,uDAAwD,EAAKvG,OAJrF,cAIHwG,EAJG,gBAODjB,IAAQgB,KAAK,4DAA6D,CAC5EM,KAAM,EAAK7G,MAAMiG,MACjBsD,MAAO,IAEVC,IAAI,gBAAiBhD,EAAMb,KAAKa,OAX1B,OAYP,EAAKhG,MAAMiG,YAAYD,EAAMb,KAAKa,OAClC,EAAKhG,MAAMyB,QAAQC,KAAK,oBAbjB,kDAeP,EAAK5B,SAAS,CAAE8E,QAAS,UAflB,0D,wDAoBfsB,aAAe,SAACN,GACZ,IAAMO,EAAW,GACjBA,EAASP,EAAEQ,OAAOC,MAAQT,EAAEQ,OAAOE,MACnC,EAAKxG,SAASqG,I,EAElB8C,WAAa,WACT,EAAKjJ,MAAMyB,QAAQC,KAAK,Y,kEAlFxB,IAAI8E,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAyB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KACrFC,EAAW,IAAIL,IACnBK,EAASC,QAASJ,OAAOC,WAAYD,OAAOE,aAG5C1G,KAAK6G,MAAMC,YAAaH,EAASI,YAEjC,IADA,IAAIC,EAAU,IAAIV,IACVW,EAAE,EAAIA,EAAE,IAAMA,IAAK,CACvB,IAAIC,EAAO,IAAIZ,IACK,IAAhB3C,KAAKE,SAAiB,IACN,IAAhBF,KAAKE,SAAiB,IACN,IAAhBF,KAAKE,SAAiB,KAE1BqD,EAAKC,SAAW,EAChBD,EAAKE,aAAe,KACpBJ,EAAQK,SAAS9F,KAAK2F,GAE1B,IAAII,GAAS,IAAIhB,KAAsBiB,KAAKC,KACxCC,EAAe,IAAInB,IAAqB,CACxCrE,MAAO,SACPqF,OAAQ,GACRhF,IAAKgF,IAELI,EAAQ,IAAIpB,IAAaU,EAASS,GACtCpB,EAAMsB,IAAID,GAKVnB,EAAOqB,SAASC,EAAI,EACpBtB,EAAOqB,SAASE,EAAInE,KAAKoE,GAAG,GACd,SAAVC,IACAhB,EAAQK,SAASY,SAAQ,SAAAC,GACrBA,EAAEf,UAAYe,EAAEd,aAChBc,EAAEL,GAAKK,EAAEf,SACNe,EAAEL,EAAI,MACLK,EAAEL,GAAK,IACPK,EAAEf,SAAW,MAGrBH,EAAQmB,oBAAqB,EAC7BT,EAAMU,SAASP,GAAK,KAEtBQ,sBAAuBL,GAGvBrB,EAAS2B,OAAQjC,EAAOE,GAE1ByB,K,+BAqCM,IAAD,SACqBhI,KAAKX,MAAxBiG,EADF,EACEA,MAAOC,EADT,EACSA,SACd,OACI,oCACA,yBAAKgD,IAAK,SAAAA,GAAG,OAAK,EAAK1B,MAAQ0B,KAE/B,yBAAKlI,UAAU,WACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,cACf,0BAAMA,UAAU,8BAAhB,UAGA,0BAAMmI,SAAUxI,KAAKwF,aAAcnF,UAAW,eACtC,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,cACf,wCAEJ,2BAAOoI,SAAUzI,KAAK+F,aAAcG,KAAK,QAAQC,MAAOb,MAGxD,yBAAKjF,UAAU,oBACf,2CAEA,2BAAOoI,SAAUzI,KAAK+F,aAAcG,KAAK,WAAWC,MAAOZ,OAIvD,yBAAKlF,UAAU,sBACX,yBAAKA,UAAU,iBACX,4BAAQA,UAAU,qBAAlB,cAIfL,KAAKX,MAAMoF,SAAW,oEACvB,4BAAQpE,UAAU,oBAAoBC,QAASN,KAAK8I,YAApD,gBACA,kBAAC,IAAD,CAAMJ,GAAG,UAAS,uBAAG5D,GAAG,eAAN,qB,GA3HNvE,a,iBCCfwI,G,kNAEjB1J,MAAQ,CACJ2J,cAAe,GACfC,UAAW,I,iMAKP5C,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAyB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,MACrFC,EAAW,IAAIL,KACVM,QAASJ,OAAOC,WAAYD,OAAOE,aAG5C1G,KAAK6G,MAAMC,YAAaH,EAASI,YAC7BmC,EAAW,IAAI5C,IAAsB,GAAI,GAAI,KAE7C6C,EAAW,IAAI7C,IAAyB,CAAErE,MAAO,YAE5CK,IAAMgE,IAAiB8C,YAAYC,KACxCC,EAAO,IAAIhD,IAAY4C,EAAUC,GACrC9C,EAAMsB,IAAK2B,GACX/C,EAAOqB,SAASC,EAAI,EACN,SAAVG,IACFK,sBAAuBL,GACvBsB,EAAKlB,SAASN,GAAK,IACnBwB,EAAKlB,SAASmB,GAAK,IACnB5C,EAAS2B,OAAQjC,EAAOE,GAE1ByB,KAIGhI,KAAKH,MAAM2J,MAAQ,G,iBAClBxJ,KAAKL,SAAS,CAAEqJ,cAAc,gM,6BACvBhJ,KAAKH,MAAM4J,MAAQ,G,iBAC1BzJ,KAAKL,SAAS,CAAEqJ,cAAc,yK,yCAGxBpE,IAAQ8E,IAAI,6DACjBb,IAAI,gBAAiB7I,KAAKH,MAAMgG,O,eAEjC7F,KAAKL,SAAS,CAAEqJ,cAAc,oO,UAGRpE,IAAQC,IAAI,6DACjCgE,IAAI,gBAAiB7I,KAAKH,MAAMgG,O,QAD3B8D,E,OAEN3J,KAAKL,SAAS,CAAEsJ,UAAWU,EAAQ3E,KAAK,GAAG4D,Q,sIAIzC,IAAD,OAEL,OADAgB,QAAQC,IAAI7J,KAAKX,MAAM4J,WAGnB,6BACI,yBAAKV,IAAK,SAAAA,GAAG,OAAK,EAAK1B,MAAQ0B,KAC/B,yBAAKlI,UAAU,kBAEX,2BAAIL,KAAKX,MAAM2J,eAEdhJ,KAAKX,MAAM4J,WAAa,2CAAiBjJ,KAAKX,MAAM4J,UAA5B,WACzB,kBAAC,IAAD,CAAM5I,UAAU,iBAAiBqI,GAAI,oBAArC,qBACA,kBAAC,IAAD,CAAMrI,UAAU,iBAAiBqI,GAAI,KAArC,mB,GAhEkBnI,c,2DCDjBuJ,E,4MAEjBxJ,QAAU,WACN,EAAKT,MAAMyB,QAAQC,KAAK,W,uDAIxB,OACA,8BACI,yBAAKlB,UAAU,WACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,cACX,6BACI,0BAAMyE,GAAG,gBAAe,+FAAoE,6BAApE,6FAAuK,6BAAvK,qEAC0C,6BAD1C,gFAEqD,6BAFrD,gCAEuF,6BAFvF,6EAGkD,6BAHlD,4EAMhC,0BAAMzE,UAAU,8BAAhB,sBAGI,0BAAMmI,SAAUxI,KAAKH,MAAMkK,aAAc1J,UAAU,cAC/C,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,cACX,+BACA,2BAAO2J,KAAK,QAAQ7D,MAAM,IAAIsC,SAAYzI,KAAKH,MAAMkG,aAAcG,KAAK,YAAY7F,UAAU,cAAc4J,gBAAc,IAC1H,yBAAKnI,IAAKoI,IAAWnI,IAAI,mBAAmB1B,UAAU,cACtD,mDAGJ,yBAAKA,UAAU,cACX,+BACA,2BAAO2J,KAAK,QAAQ7D,MAAM,IAAIsC,SAAYzI,KAAKH,MAAMkG,aACrDG,KAAK,YACL7F,UAAU,gBACV,yBAAKyB,IAAKqI,IAAQpI,IAAI,mBAAmB1B,UAAU,cACnD,qDAGJ,yBAAKA,UAAU,cACX,+BACA,2BAAO2J,KAAK,QAAQ7D,MAAM,IAAIsC,SAAYzI,KAAKH,MAAMkG,aAAcG,KAAK,YAAY7F,UAAU,cAAc4J,gBAAc,IAC1H,yBAAKnI,IAAKsI,IAASrI,IAAI,mBAAmB1B,UAAU,cACpD,qDAIJ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,iBACX,4BAAQA,UAAU,qBAAlB,2BAKZ,4BAAQC,QAASN,KAAKM,QAASD,UAAU,qBAAzC,8B,GAvDyBE,aCH5B8J,G,6KAEb,OACI,6BACI,6BAAShK,UAAW,WAEpB,6BAASA,UAAS,WACd,yBAAKA,UAAU,WACX,yBAAKyB,IAAG,4EAA+EC,IAAI,aAAa1B,UAAS,eACjH,qCACA,oDAEJ,yBAAKA,UAAU,WACf,yBAAKyB,IAAG,4EAA+EC,IAAI,aAAa1B,UAAS,eAC7G,oCACA,oDAEJ,yBAAKA,UAAU,WACf,yBAAKyB,IAAG,4EAA+EC,IAAI,aAAa1B,UAAS,eAC7G,sCACA,oDAEJ,yBAAKA,UAAU,e,GAtBAE,cCYd+J,E,4MACnBjL,MAAQ,CACNsC,KAAM,CACR,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEzB4I,iBAAkB,GAClBnJ,OAAQ,GACRsB,kBAAmB,CAAC,EAAG,GACvBpD,UAAW,sBACXkL,WAAY,cACZC,UAAW,EACXC,UAAW,EACXC,aAAc,EACdC,gBAAiB,EACjBC,eAAgB,EAChBC,WAAY,CACZC,YAAa,EACbC,eAAgB,EAChBC,aAAc,GAEdC,kBAAmB,EACnBC,gBAAiB,GACjBC,oBAAqB,CAAC,CAAC,EAAE,IACzBC,SAAS,EACTC,SAAS,EACTzF,MAAOpG,aAAaC,QAAQ,c,EAG5BoG,YAAc,SAACyF,GACb,EAAK5L,SAAS,CAAEkG,MAAO0F,IACvB9L,aAAa+L,QAAQ,YAAaD,I,EAGpC5G,oBAAsB,WACpB,EAAKhF,SAAS,CAAEyB,OAAQ,M,EAG1BsD,eAAiB,SAAC+G,EAAQhC,EAAMiC,GAC9B9B,QAAQC,IAAI4B,EAAQhC,EAAMiC,GAC1B,IAAMC,EAAY,EAAKtM,MAAMqL,UAAYe,EACnCG,EAAU,EAAKvM,MAAMoL,UAAYhB,EACjCoC,EAAa,EAAKxM,MAAMsL,aAAee,EAE7C,EAAK/L,SAAS,CACZ8K,UAAWmB,EACXlB,UAAWiB,EACXhB,aAAekB,K,EAInBC,mBAAqB,SAACC,EAAOnE,GAC3B,IAAMoE,EAAiBlL,KAAKmL,UAAUrE,GAItC,OAHkBmE,EAAMG,MAAK,SAAAC,GAC3B,OAAOrL,KAAKmL,UAAUE,KAAUH,M,EAKpCI,cAAgB,SAAC1J,EAAmB6H,EAAkB8B,GACpDzC,QAAQC,IAAI,UAAWnH,EAAmB,SAAU6H,GAEpD,IAAI3C,EAAW,CAAC2C,EAAiB,GAAIA,EAAiB,IAElD+B,EAAc,EAAKjN,MAAM+L,oBAC7BxB,QAAQC,IAAIyC,EAAa,gBAErB,EAAKR,mBAAmB,EAAKzM,MAAM+L,oBAAqBxD,IAAa,EAAKvI,MAAMoL,UAAY,IAE1F/H,EAAkB,GAAK,IAAM6H,EAAiB,IAAM7H,EAAkB,KAAO6H,EAAiB,IAAQ7H,EAAkB,GAAK,IAAM6H,EAAiB,IAAM7H,EAAkB,KAAO6H,EAAiB,IAE7L7H,EAAkB,GAAK,IAAM6H,EAAiB,IAAM7H,EAAkB,KAAO6H,EAAiB,GADrG,EAAK5K,SAAS,CAAE+C,kBAAmB,CAAC6H,EAAiB,GAAIA,EAAiB,MAI1EX,QAAQC,IAAI,kBAEhB,EAAKxK,MAAM+L,oBAAoB7J,KAAK,CAACgJ,EAAiB,GAAIA,EAAiB,KAC3E,EAAK5K,SAAS,CAAC8K,UAAW,EAAKpL,MAAMoL,UAAY,IAEjD,EAAK8B,eAAeF,K,EAK1BE,e,uCAAiB,WAAMF,GAAN,qBAAA3G,EAAA,yDAES,IAAnB2G,EAFU,iCAGiBzH,IAAQC,IAAI,yDAH7B,OAMT,IAHI2H,EAHK,OAILpL,EAASoL,EAAcxH,KACvByH,EAAc9I,KAAK+I,MAAM/I,KAAKE,SAAU2I,EAAcxH,KAAK2H,QACzD,EAAKtN,MAAM8L,gBAAgByB,SAASH,IAAiB,EAAKpN,MAAM8L,gBAAgBwB,OAAS,GAC7FF,EAAc9I,KAAK+I,MAAM/I,KAAKE,SAAU2I,EAAcxH,KAAK2H,QAE7D/C,QAAQC,IAAIzI,IACNyL,EAAuB,EAAKxN,MAAM8L,iBACjB5J,KAAKkL,GAC1B,EAAK9M,SAAS,CAAEyB,OAAQA,EAAOqL,GAActB,gBAAiB0B,IAZvD,wBAcoB,IAAnBR,EACR,EAAK1M,SAAS,CAAEyB,OAAQ,CAAEC,cAAe,gBACd,IAAnBgL,EACR,EAAK1M,SAAS,CAAEyB,OAAQ,KAEG,IAAnBiL,EACR,EAAK1M,SAAS,CAAE8K,UAAW,EAAKpL,MAAMoL,UAAY,EAAGrJ,OAAQ,KAClC,IAAnBiL,GACR,EAAK1M,SAAS,CAAE0L,SAAS,EAAMjK,OAAQ,CAAEC,cAAe,wBAtBjD,4C,wDA0BjBsB,iB,uCAAmB,WAAO1C,EAAKF,GAAZ,iBAAA2F,EAAA,sDAEX2G,EAAiB,EAAKhN,MAAMsC,KAAK1B,GAAKF,GACtC+M,EAAmB,CAAC7M,EAAKF,GACP,IAAnBsM,GACCS,EAAmB,EAAKzN,MAAMqD,kBAC9BkH,QAAQC,IAAI,0BAEZ,EAAKlK,SAAS,CAAE4K,iBAAkB,CAACtK,EAAKF,KAE5C,EAAKqM,cAAc,EAAK/M,MAAMqD,kBAAmBoK,EAAkBT,GAVpD,2C,0DAanBU,oBAAsB,SAACtH,GAErB,EAAK9F,SAAS,CAAEuL,kBAAmBzF,EAAEQ,OAAOE,S,EAM9C6G,sB,uCAAwB,WAAMvH,GAAN,yCAAAC,EAAA,6DACtBD,EAAEE,iBADoB,SAEGf,IAAQC,IAAR,4DAAiE,EAAKxF,MAAM6L,oBAF/E,UAEhB+B,EAFgB,OAGlBC,EAAWD,EAAWjI,KAAK,GAC/B4E,QAAQC,IAAIqD,GAEwB,MAAjC,EAAK7N,MAAM6L,kBANQ,iCAOAtG,IAAQC,IAAR,yCAPA,OAOd5C,EAPc,OAQdkL,EAAerM,KAAKC,MAAMkB,EAAMmL,MAEhCC,EAAcF,EAAaG,QAAQ,GAAGC,OACtCC,EAAc,CAClB,eAAkBH,EAAY,GAC9B,SAAWA,EAAY,GACvB,WAAcA,EAAY,IAE5B5N,aAAa+L,QAAQ,eAAgB1K,KAAKmL,UAAUuB,IACpD/N,aAAa+L,QAAQ,YAAa0B,EAASpI,IAjBvB,2BAoBqB,MAAjC,EAAKzF,MAAM6L,mBAA8D,IAAjC,EAAK7L,MAAM6L,kBApBvC,kCAqBAtG,IAAQC,IAAR,yCArBA,QAqBd5C,EArBc,OAsBdkL,EAAerM,KAAKC,MAAMkB,EAAMmL,MACtCxD,QAAQC,IAAIsD,GACNE,EAAcF,EAAaG,QAAQ,GAAGC,OACtCC,EAAc,CAClB,eAAkBH,EAAY,GAC9B,SAAWA,EAAY,GACvB,WAAcA,EAAY,IAE5B5N,aAAa+L,QAAQ,eAAgB1K,KAAKmL,UAAUuB,IACpD/N,aAAa+L,QAAQ,YAAa0B,EAASpI,IA/BvB,2BAgCqB,MAAjC,EAAKzF,MAAM6L,mBAA8D,IAAjC,EAAK7L,MAAM6L,kBAhCvC,kCAiCAtG,IAAQC,IAAR,wCAjCA,QAiCd5C,EAjCc,OAmCdkL,EAAerM,KAAKC,MAAMkB,EAAMmL,MAEhCC,EAAcF,EAAaG,QAAQ,GAAGC,OAEtCC,EAAc,CAClB,eAAkBH,EAAY,GAC9B,SAAY,UACZ,WAAcA,EAAY,IAE5B5N,aAAa+L,QAAQ,eAAgB1K,KAAKmL,UAAUuB,IACpD/N,aAAa+L,QAAQ,YAAa0B,EAASpI,IA7CvB,QAiDtB,EAAKnF,SAAS,CAAEL,UAAW4N,EAAS5N,UACpBkL,WAAY0C,EAAS1C,WACrBC,UAAWyC,EAASzC,UACpBC,UAAWwC,EAASxC,UACpBC,aAAcuC,EAASO,YACvB3C,WAAY,CAAEC,YAAamC,EAASnC,YACpCC,eAAgBkC,EAASlC,eACzBC,aAAciC,EAASjC,cACvBL,gBAAiBsC,EAAStC,gBAC1BC,eAAgBqC,EAASrC,eACzBnI,kBAAmB,CAAC,EAAG,GACvByI,gBAAiB,GACjBC,oBAAqB,CAAC,CAAC,EAAE,MA7DnB,4C,6GAkEZ,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsC,KAAK,SAASC,OAAK,EAACrF,OAAQ,SAACsF,GAAD,OAAiB,kBAAC,EAAD,eACpDjM,KAAM,EAAKtC,MAAMsC,KACjB4I,iBAAkB,EAAKlL,MAAMkL,iBAC7BnJ,OAAQ,EAAK/B,MAAM+B,OACnBsB,kBAAmB,EAAKrD,MAAMqD,kBAC9BC,iBAAkB,EAAKA,iBACvB/C,OAAQ,EAAKP,MAAMgM,QACnBjJ,SAAU,EAAK/C,MAAMoL,UACrBtI,SAAU,EAAK9C,MAAMqL,UACrBrI,YAAa,EAAKhD,MAAMsL,cACpBiD,OAEJ,kBAAC,IAAD,CAAOF,KAAK,mBAAmBpF,OAAQ,SAACsF,GAAD,OAAiB,kBAAC,EAAD,eACxD7D,aAAc,EAAKiD,sBACnBjH,aAAc,EAAKgH,qBACda,OACJ,kBAAC,IAAD,CAAOF,KAAK,UAAUpF,OAAQ,SAACsF,GAAD,OAAiB,kBAAC,EAAD,eAC/CxM,OAAQ,EAAK/B,MAAM+B,OACnBsD,eAAgB,EAAKA,eACrBC,oBAAqB,EAAKA,oBAC1BvC,SAAU,EAAK/C,MAAMoL,UACrBtI,SAAU,EAAK9C,MAAMqL,UACrBrI,YAAa,EAAKhD,MAAMsL,aACxBjH,UAAW,EAAKrE,MAAMyL,YAClB8C,OACJ,kBAAC,IAAD,CAAOF,KAAK,IAAIC,OAAK,EAACrF,OAAQ,SAACsF,GAAD,OAAiB,kBAAC,EAAD,eAC/C9H,YAAa,EAAKA,aACd8H,OACJ,kBAAC,IAAD,CAAOF,KAAK,UAAUpF,OAAQ,SAACsF,GAAD,OAAiB,kBAAC,EAAD,eAC/C9H,YAAa,EAAKA,aACd8H,OACJ,kBAAC,IAAD,CAAOF,KAAK,YAAYpF,OAAQ,SAACsF,GAAD,OAAiB,kBAAC,EAAD,eACjD/H,MAAO,EAAKxG,MAAMwG,MAClB2D,KAAM,EAAKnK,MAAMqL,UACjBjB,KAAM,EAAKpK,MAAMoL,WACbmD,OACJ,kBAAC,IAAD,CAAOF,KAAK,SAASpF,OAAQ,SAACsF,GAAD,OAAiB,kBAAC,EAC3CA,a,GAjPgBrN,aCHbsN,QACW,cAA7BrH,OAAOsH,SAASC,UAEe,UAA7BvH,OAAOsH,SAASC,UAEhBvH,OAAOsH,SAASC,SAASC,MACvB,2DCZNC,IAAS3F,OACP,kBAAC,IAAM4F,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhF,QAAQgF,MAAMA,EAAMC,c","file":"static/js/main.11b633b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiteCircle.afd0635d.png\";","module.exports = __webpack_public_path__ + \"static/media/earthmap1k.49c3b412.jpg\";","module.exports = __webpack_public_path__ + \"static/media/diplomacy_rocket.1700ba73.png\";","module.exports = __webpack_public_path__ + \"static/media/combat_rocket.f83992f5.png\";","module.exports = __webpack_public_path__ + \"static/media/biology_rocket.9b55bac7.png\";","import React, { Component } from 'react'\r\nimport './BoardSpace.css'\r\n\r\nexport default class BoardSpace extends Component {\r\n    state={\r\n        ship_name: ''\r\n    }\r\n    componentDidMount = () => {\r\n        const shipName = localStorage.getItem('SHIP_NAME')\r\n        this.setState=({ship_name: shipName})\r\n    }\r\n\r\n    hasWon = () => {\r\n        if(this.props.hasWon === true) {\r\n            \r\n        }}\r\n\r\n    render() {\r\n        const row = this.props.row;\r\n        const col = this.props.col;\r\n        // 0: no fly , 1: planet , 2: fly path , 3: space station, 4: goal\r\n        const boardSpaceType = this.props.boardSpaceType;\r\n        let extraClassName;\r\n        let spaceShipClass = '';\r\n        // make this a switch statement\r\n        if(boardSpaceType === 0) {\r\n            extraClassName = 'nofly'\r\n        } else if(boardSpaceType === 1) {\r\n            extraClassName = 'planet'\r\n        } else if(boardSpaceType === 2) {\r\n            extraClassName = 'flypath'\r\n        } else if(boardSpaceType === 4) {\r\n            extraClassName = 'goal'\r\n        } else if(boardSpaceType === 3) {\r\n            extraClassName = 'station'\r\n        }\r\n\r\n        if(row === this.props.spaceship[0] && col === this.props.spaceship[1]) {\r\n\r\n            spaceShipClass = 'spaceship'\r\n        }\r\n\r\n        return (\r\n            <div className={`boardspace ${extraClassName} ${spaceShipClass}`} \r\n            onClick={() => this.props.onClick(row, col)}\r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport BoardSpace from './BoardSpace.js';\r\nimport './Board.css';\r\n\r\nexport default class Board extends Component {\r\n    state = {\r\n        background_color: '',\r\n        border_color: '',\r\n        text_color: ''\r\n    }\r\n    componentDidMount = () => {\r\n        const color_scheme = localStorage.getItem('COLOR_SCHEME')\r\n        const parsedScheme = JSON.parse(color_scheme)\r\n\r\n        this.setState({ background_color: parsedScheme.background_clr,\r\n        border_color: parsedScheme.border_clr,\r\n        text_color: parsedScheme.font_clr\r\n        })\r\n    }\r\n\r\n    goToNextPage = () => {\r\n        if(this.props.planet.location_name === 'Open space') {\r\n            this.props.history.push('/gameover')\r\n        } else if (this.props.hasWon === true) {\r\n            this.props.history.push('/gameover')\r\n        } else if(this.props.planet) {\r\n            this.props.history.push('/planet')\r\n        }\r\n    }\r\n   \r\n\r\n    checkPlanet = (planet) => {\r\n        for(let key in planet) {\r\n            if(planet.hasOwnProperty(key))\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n\r\n     \r\n        let planet = this.checkPlanet(this.props.planet)\r\n        \r\n        const grid = this.props.grid;\r\n        return (\r\n        <section>\r\n            <div className=\"top-container\">\r\n\r\n            <div className=\"top-left-container\">\r\n                {\r\n                    this.props.planet && <div className=\"top-left-test\">\r\n                        <div className='scan-text'>\r\n                            <p>Planet Name: {this.props.planet.location_name}</p>\r\n                            <p>Scan Complete: {this.props.planet.location_description}</p>\r\n                            {planet\r\n                            ? <h3>No Planet Detected: Continue Your Voyage</h3>\r\n                            : <button className=\"button\" onClick={this.goToNextPage}>Investigate Planet</button>\r\n                             }   \r\n                        </div>\r\n                        <div>\r\n                            {this.props.planet.location_image && <img className=\"planet-image\" src={this.props.planet.location_image} alt=''/>}\r\n                        </div>\r\n                    </div>\r\n            \r\n                }\r\n            </div>\r\n            <div className=\"top-right-container\">\r\n                <div className='top-right-inner-container' style={\r\n                    {color: `#${this.state.text_color}`,\r\n                    backgroundColor: `#${this.state.background_color}`}\r\n                }>\r\n                    <p>Status Report</p> \r\n                    <p>Ship Hull: {this.props.shipHull}</p>\r\n                    <p>Ship Fuel: {this.props.shipFuel}</p>\r\n                    <p>Credits: {this.props.shipCredits}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='board-container'>\r\n            {grid.map((row, rowIndex) => {\r\n                return (\r\n                    <div key={rowIndex}>\r\n                        {\r\n                            row.map((boardSpace, boardSpaceIndex) => {\r\n                                return <BoardSpace \r\n                                key={boardSpaceIndex}\r\n                                boardSpaceType={boardSpace}\r\n                                spaceship={this.props.spaceShipPosition}\r\n                                row={rowIndex}\r\n                                col={boardSpaceIndex}\r\n                                onClick={(row, col) => this.props.handleSpacePress(row, col)}\r\n                                />\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent'\r\nimport './planetpage.css'\r\n\r\nexport default class PlanetPage extends Component {\r\n    state = {\r\n        event: {\r\n            event_choices: []\r\n        },\r\n        eventChoices: [],\r\n        results: '',\r\n        rewards: [],\r\n        rollNeeded: '',\r\n        userRoll: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let fetchedEvent = await request.get(`https://guarded-reef-50217.herokuapp.com/events/${this.props.planet.id}`)\r\n        const eventChoices = fetchedEvent.body[0].event_choices.map(event => JSON.parse(event))\r\n        this.setState({ event: fetchedEvent.body[0], eventChoices: eventChoices })\r\n    }\r\n\r\n    choiceMade = (index) => {\r\n        let chosenChoice = this.state.eventChoices[index];\r\n        let roll_type = chosenChoice.roll_type;\r\n        let rollNeeded = chosenChoice.roll_needed;\r\n        let ship = this.props.shipStats;\r\n        let userRoll = Math.ceil(Math.random() * 10)\r\n        userRoll += ship[`base_${roll_type}`]\r\n        let arr = [];\r\n        if(userRoll >= rollNeeded) {\r\n            const successArray = [chosenChoice.rewards.success_fuel, chosenChoice.rewards.success_credit, chosenChoice.rewards.success_health]\r\n            arr = successArray;\r\n            \r\n            this.setState({ results: chosenChoice.result.sucess, rewards: successArray, userRoll: userRoll, rollNeeded: rollNeeded })\r\n        } else {\r\n            const failureArray = [chosenChoice.rewards.failure_fuel, chosenChoice.rewards.failure_credit, chosenChoice.rewards.failure_health];\r\n            arr = failureArray;\r\n            this.setState({ results: chosenChoice.result.failure, rewards: failureArray, userRoll: userRoll, rollNeeded: rollNeeded })\r\n        }\r\n        this.props.applyShipStats(arr[2], arr[0], arr[1])\r\n\r\n    }\r\n    goToNextPage = () => {\r\n        if(this.props.shipHull > 0 && this.props.shipFuel > 0) {\r\n            this.props.history.push('/board')\r\n        }\r\n        if (this.props.shipHull <= 0) {\r\n            this.props.history.push('/gameOver')\r\n        }\r\n        if (this.props.shipFuel <= 0) {\r\n            this.props.history.push('/gameOver')\r\n        }\r\n        this.props.clearPlanetFunction()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"planet-page-container\">\r\n                <div className=\"event-image-container\">\r\n                    <img className=\"event-image\" src={this.state.event.event_image} alt=\"\"/>\r\n                </div>\r\n                <div className=\"text-section\">\r\n                    <div className=\"event-title\">\r\n                        <p className=\"title\">{this.state.event.event_name}</p>\r\n                        <p>{this.state.event.event_description}</p>\r\n                    </div>\r\n                    <div className=\"event-details\">\r\n                    {!this.state.results && this.state.event.event_choices.map(event => JSON.parse(event)).map(\r\n                        (event, index) => <div>\r\n                            <p>{event.choice_description}</p>\r\n\r\n                            <button className=\"button\" onClick= {() => this.choiceMade(index)}>Choose</button>\r\n\r\n                            </div>\r\n                                    )\r\n                }\r\n                </div>\r\n                {this.state.results && <div className=\"planet-results\">\r\n                    <p>{this.state.results}</p>\r\n                    <p>You needed a {this.state.rollNeeded} and your total roll was {this.state.userRoll}.</p>\r\n                    <ul>\r\n                        <li>Hull change: {this.state.rewards[2]}</li>\r\n                        <li>Fuel change: {this.state.rewards[0]}</li>\r\n                        <li>Credit change: {this.state.rewards[1]}</li>\r\n                    </ul>\r\n                \r\n                    <button className=\"button\" onClick={this.goToNextPage}>Continue Your Search</button>\r\n\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent';\r\nimport './test.css'\r\nimport * as THREE from 'three';\r\nimport whiteCircle from './photos/background/whiteCircle.png'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Signin extends Component {\r\n    componentDidMount() {\r\n        var scene = new THREE.Scene();\r\n        var camera = new THREE.PerspectiveCamera( 60, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n        var renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize( window.innerWidth, window.innerHeight );\r\n        // document.body.appendChild( renderer.domElement );\r\n        // use ref as a mount point of the Three.js scene instead of the document.body\r\n        this.mount.appendChild( renderer.domElement );\r\n        let starGeo = new THREE.Geometry();\r\n        for(let i=0 ; i<6000; i++) {\r\n            let star = new THREE.Vector3(\r\n                Math.random() * 600 - 300,\r\n                Math.random() * 600 - 300,\r\n                Math.random() * 600 - 300\r\n            );\r\n            star.velocity = 0;\r\n            star.acceleration = 0.001;\r\n            starGeo.vertices.push(star)\r\n        }\r\n        let sprite = new THREE.TextureLoader().load(whiteCircle)\r\n        let starMaterial = new THREE.PointsMaterial({\r\n            color: 0xaaaaaa,\r\n            sprite: 0.7,\r\n            map: sprite\r\n        });\r\n        let stars = new THREE.Points(starGeo, starMaterial);\r\n        scene.add(stars)\r\n        // var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n        // var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n        // var cube = new THREE.Mesh( geometry, material );\r\n        // scene.add( cube );\r\n        camera.position.z = 1;\r\n        camera.position.x = Math.PI/2\r\n        var animate = function () {\r\n            starGeo.vertices.forEach(p =>{\r\n                p.velocity -= p.acceleration;\r\n                p.z -= p.velocity;\r\n                if(p.z > 200) {\r\n                    p.z = -200;\r\n                    p.velocity = 0;\r\n                }\r\n            })\r\n            starGeo.verticesNeedUpdate = true;\r\n            stars.rotation.z += 0.002;\r\n            \r\n          requestAnimationFrame( animate );\r\n        //   cube.rotation.x += 0.01;\r\n        //   cube.rotation.y += 0.01;\r\n          renderer.render( scene, camera );\r\n        };\r\n        animate();\r\n      }\r\n\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            let token = await request.post('https://guarded-reef-50217.herokuapp.com/auth/signin', this.state)\r\n            this.props.tokenChange(token.body.token)\r\n            this.props.history.push('/characterselect')\r\n        } catch {\r\n            this.setState({ failure: 'oh no' })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const newState = {}\r\n        newState[e.target.name] = e.target.value;\r\n        this.setState(newState);\r\n    }\r\n    goToSignUp = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {email, password} = this.state;\r\n        return (\r\n            <>\r\n    <div ref={ref => (this.mount = ref)} ></div>\r\n    <div>\r\n        \r\n    </div>\r\n<div className='limiter'>\r\n    <div className='login-container'>\r\n        <div className='wrap-login'>\r\n        <span className=\"login100-form-title p-b-26\">\r\n            Login\r\n        </span>\r\n            <form onSubmit={this.handleSubmit} className='login-form'>\r\n                <div className='login-options'>\r\n                    <div className='wrap-input'>\r\n                        <label>\r\n                            Email:\r\n                            <input onChange={this.handleChange} name=\"email\" value={email} />\r\n                        </label>\r\n                    </div>\r\n                <div className='wrap-input-login'>\r\n                    <label>\r\n                    Password:\r\n                        <input onChange={this.handleChange} name=\"password\" value={password} />\r\n                    </label>\r\n                </div>\r\n                </div>\r\n                    <div className='container-form-btn'>\r\n                        <div className='wrap-form-btn'>\r\n                            <button className='login-form-button'>Sign In</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {this.state.failure && <p>Username and password not accepted</p>}\r\n            <button className='login-form-button' onClick={this.goToSignUp}>Go to Sign Up </button>\r\n            <Link to='/about'><p id='aboutUsText'>ABOUT US</p></Link>\r\n        </div>\r\n    </div>\r\n</div>\r\n</>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent';\r\nimport * as THREE from 'three';\r\nimport whiteCircle from './photos/background/whiteCircle.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Signup extends Component {\r\n    componentDidMount() {\r\n        var scene = new THREE.Scene();\r\n        var camera = new THREE.PerspectiveCamera( 60, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n        var renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize( window.innerWidth, window.innerHeight );\r\n        // document.body.appendChild( renderer.domElement );\r\n        // use ref as a mount point of the Three.js scene instead of the document.body\r\n        this.mount.appendChild( renderer.domElement );\r\n        let starGeo = new THREE.Geometry();\r\n        for(let i=0 ; i<6000; i++) {\r\n            let star = new THREE.Vector3(\r\n                Math.random() * 600 - 300,\r\n                Math.random() * 600 - 300,\r\n                Math.random() * 600 - 300\r\n            );\r\n            star.velocity = 0;\r\n            star.acceleration = 0.001;\r\n            starGeo.vertices.push(star)\r\n        }\r\n        let sprite = new THREE.TextureLoader().load(whiteCircle)\r\n        let starMaterial = new THREE.PointsMaterial({\r\n            color: 0xaaaaaa,\r\n            sprite: 0.7,\r\n            map: sprite\r\n        });\r\n        let stars = new THREE.Points(starGeo, starMaterial);\r\n        scene.add(stars)\r\n        // var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n        // var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n        // var cube = new THREE.Mesh( geometry, material );\r\n        // scene.add( cube );\r\n        camera.position.z = 1;\r\n        camera.position.x = Math.PI/2\r\n        var animate = function () {\r\n            starGeo.vertices.forEach(p =>{\r\n                p.velocity -= p.acceleration;\r\n                p.z -= p.velocity;\r\n                if(p.z > 200) {\r\n                    p.z = -200;\r\n                    p.velocity = 0;\r\n                }\r\n            })\r\n            starGeo.verticesNeedUpdate = true;\r\n            stars.rotation.z += 0.002;\r\n            \r\n          requestAnimationFrame( animate );\r\n        //   cube.rotation.x += 0.01;\r\n        //   cube.rotation.y += 0.01;\r\n          renderer.render( scene, camera );\r\n        };\r\n        animate();\r\n      }\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            let token = await request.post('https://guarded-reef-50217.herokuapp.com/auth/signup', this.state)\r\n    \r\n            // create a score table for the user when they first sign up\r\n            await request.post('https://guarded-reef-50217.herokuapp.com/api/loggedinuser', {\r\n                name: this.state.email,\r\n                score: 0\r\n            })\r\n            .set('Authorization', token.body.token)\r\n            this.props.tokenChange(token.body.token)\r\n            this.props.history.push('/characterselect')\r\n        } catch {\r\n            this.setState({ failure: 'oh no' })\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const newState = {}\r\n        newState[e.target.name] = e.target.value;\r\n        this.setState(newState);\r\n    }\r\n    goToSignIn = () => {\r\n        this.props.history.push('/signin');\r\n    }\r\n\r\n\r\n    render() {\r\n        const {email, password} = this.state;\r\n        return (\r\n            <>\r\n            <div ref={ref => (this.mount = ref)} ></div>\r\n                \r\n            <div className='limiter'>\r\n                <div className='login-container'>\r\n                    <div className='wrap-login'>\r\n                    <span className=\"login100-form-title p-b-26\">\r\n                        Signup\r\n                    </span>\r\n                    <form onSubmit={this.handleSubmit} className={'signup-form'}>\r\n                            <div className='login-options'>\r\n                                <div className='wrap-input'>\r\n                                <label>\r\n                            Email:\r\n                            <input onChange={this.handleChange} name=\"email\" value={email}/>\r\n                        </label>\r\n                                </div>\r\n                            <div className='wrap-input-login'>\r\n                            <label>\r\n                            Password:\r\n                            <input onChange={this.handleChange} name=\"password\" value={password}/>\r\n                        </label>\r\n                            </div>\r\n                            </div>\r\n                                <div className='container-form-btn'>\r\n                                    <div className='wrap-form-btn'>\r\n                                        <button className='login-form-button'>Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.state.failure && <p>Username and password already exsists</p>}\r\n                        <button className='login-form-button' onClick={this.goToSignIn}>Go to Log In</button>\r\n                        <Link to='/about'><p id='aboutUsText'>ABOUT US</p></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>  \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent';\r\nimport { Link } from 'react-router-dom';\r\nimport * as THREE from 'three';\r\nimport earthMap from './photos/background/earthmap1k.jpg'\r\nimport './GameOver.css'\r\n\r\nexport default class GameOver extends Component {\r\n\r\n    state = {\r\n        final_message: '',\r\n        times_won: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n      \r\n        var scene = new THREE.Scene();\r\n        var camera = new THREE.PerspectiveCamera( 25, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n        var renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize( window.innerWidth, window.innerHeight );\r\n        // document.body.appendChild( renderer.domElement );\r\n        // use ref as a mount point of the Three.js scene instead of the document.body\r\n        this.mount.appendChild( renderer.domElement );\r\n        var geometry = new THREE.SphereGeometry( .5, 32, 32 );\r\n       \r\n        var material = new THREE.MeshBasicMaterial( { color: 0xffffff } );\r\n        // var material = new THREE.MeshPhongMaterial();\r\n        material.map = THREE.ImageUtils.loadTexture(earthMap)\r\n        var cube = new THREE.Mesh( geometry, material );\r\n        scene.add( cube );\r\n        camera.position.z = 5;\r\n        var animate = function () {\r\n          requestAnimationFrame( animate );\r\n          cube.rotation.x += 0.01;\r\n          cube.rotation.y += 0.01;\r\n          renderer.render( scene, camera );\r\n        };\r\n        animate();\r\n        \r\n\r\n        // logic for landing on the page message\r\n        if(this.props.hull <= 0) {\r\n            this.setState({ final_message: `The people of Earth realize that something must have gone wrong. They mourne your loss and raise a memorial in your name. You provide the courage for future Travelers to take the journey.` }) \r\n        } else if (this.props.fuel <= 0) {\r\n            this.setState({ final_message: `'Fuel: 1%... Fuel: 0%... You look at the monitor defeated. You send the data you've received back to Earth, hoping the next Traveler will have better luck than you.`})\r\n        } else {\r\n            // update users wins on the backend\r\n            await request.put('https://guarded-reef-50217.herokuapp.com/api/loggedinuser')\r\n            .set('Authorization', this.props.token)\r\n\r\n            this.setState({ final_message: `Your monitor brings up your location. \"Planet: JDXDJ73J39\" A smile crosses your face as you let out a sigh or relief. You found it...Orion. You quickly send a message back to Earth with your location. Finally a new home....` })\r\n\r\n            // get the total amount of users wins\r\n            const winData = await request.get('https://guarded-reef-50217.herokuapp.com/api/loggedinuser')\r\n            .set('Authorization', this.props.token)\r\n            this.setState({ times_won: winData.body[0].score })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.times_won)\r\n        return (\r\n            \r\n            <div>\r\n                <div ref={ref => (this.mount = ref)} ></div>\r\n                <div className='game-over-text'>\r\n\r\n                    <p>{this.state.final_message}</p>\r\n\r\n                    {this.state.times_won && <p>You have won {this.state.times_won} times!</p>}\r\n                    <Link className='game-over-link' to={'/characterSelect'}>Play another game</Link>\r\n                    <Link className='game-over-link' to={'/'}>Main menu</Link>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './characterSelect.css';\r\nimport diplomacy from './photos/spaceships/diplomacy_rocket.png'\r\nimport combat from './photos/spaceships/combat_rocket.png'\r\nimport science from './photos/spaceships/biology_rocket.png'\r\n\r\nexport default class CharacterSelectPage extends Component {\r\n\r\n    onClick = () => {\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <body>\r\n            <div className='limiter'>\r\n                <div className='space-container login-container'>\r\n                    <div className='wrap-login'>\r\n                        <div>\r\n                            <span id='instructions'><p>You have been sent by Earth to find a new planet for human kind. <br></br>Travel along the black holes to enter new universes and find new planets for your people. <br/>\r\n                            1. Click on a planet and decide if you want to land on the planet <br/>\r\n                            2. If you choose to land, be prepared to take any action necessary to ensure <br/>the success of your mission! <br/>\r\n                            3. Keep a look out for the planet called Orion. No one has been there but <br/>rumor has it that it is supposed to be our next best shot at survival.</p>\r\n                             </span>\r\n                        </div>\r\n                    <span className=\"login100-form-title p-b-26\">\r\n\t\t\t\t\t\tChoose Your Vessel\r\n\t\t\t\t\t</span>\r\n                        <form onSubmit={this.props.submitHandle} className='login-form'>\r\n                            <div className='ship-options'>\r\n                            <div className='wrap-input'>\r\n                                <label>\r\n                                <input type='radio' value='1' onChange = {this.props.handleChange} name='spaceship' className='rocketRadio' defaultChecked/>\r\n                                <img src={diplomacy} alt='diplomacy_rocket' className='rocketPic'/>\r\n                                <figcaption>The Reach</figcaption>\r\n                                </label>\r\n                            </div>\r\n                            <div className='wrap-input'>\r\n                                <label>\r\n                                <input type='radio' value='2' onChange = {this.props.handleChange} \r\n                                name='spaceship'\r\n                                className='rocketRadio'/>\r\n                                <img src={combat} alt='diplomacy_rocket' className='rocketPic'/>\r\n                                <figcaption>The Avenger</figcaption>\r\n                                </label>\r\n                            </div>\r\n                            <div className='wrap-input'>\r\n                                <label>\r\n                                <input type='radio' value='3' onChange = {this.props.handleChange} name='spaceship' className='rocketRadio' defaultChecked/>\r\n                                <img src={science} alt='diplomacy_rocket' className='rocketPic'/>\r\n                                <figcaption>The Icarus</figcaption>\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            <div className='container-form-btn'>\r\n                                <div className='wrap-form-btn'>\r\n                                    <button className='login-form-button'>Finalize Ship Choice</button>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <button onClick={this.onClick} className='login-form-button'>Start Your Journey</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </body>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './About.css'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className={'header'}>\r\n                </section>\r\n                <section className={`aboutUs`}>\r\n                    <div className='profile'>\r\n                        <img src={`https://image.freepik.com/free-vector/cute-alien-character_123847-105.jpg`} alt='cute-alien' className={`profilePic`}/>\r\n                        <h2>LUCIA</h2>\r\n                        <p>INFORMATION ABOUT ME</p>\r\n                    </div>\r\n                    <div className='profile'>\r\n                    <img src={`https://image.freepik.com/free-vector/cute-alien-character_123847-105.jpg`} alt='cute-alien' className={`profilePic`}/>\r\n                        <h2>ERIK</h2>\r\n                        <p>INFORMATION ABOUT ME</p>\r\n                    </div>\r\n                    <div className='profile'>\r\n                    <img src={`https://image.freepik.com/free-vector/cute-alien-character_123847-105.jpg`} alt='cute-alien' className={`profilePic`}/>\r\n                        <h2>HUNTER</h2>\r\n                        <p>INFORMATION ABOUT ME</p>\r\n                    </div>\r\n                    <div className='erik'>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    BrowserRouter as Router, \r\n    Route, \r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport Board from './Board.js';\r\nimport PlanetPage from './PlanetPage.js'\r\nimport request from 'superagent'\r\nimport Signin from './signin.js'\r\nimport Signup from './signup.js'\r\nimport GameOver from './GameOver.js'\r\nimport CharacterSelectPage from './CharacterSelectPage.js'\r\nimport About from './About.js'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    grid: [\r\n  [0, 2, 1, 3, 2, 0, 0, 0, 4],\r\n  [0, 3, 0, 0, 1, 1, 1, 0, 1],\r\n  [2, 1, 0, 0, 0, 0, 1, 1, 1],\r\n  ],\r\n  possiblePosition: [],\r\n  planet: {},\r\n  spaceShipPosition: [2, 0],\r\n  ship_name: 'The Fake Enterprise',\r\n  ship_image: 'im an image',\r\n  ship_fuel: 8,\r\n  ship_hull: 1,\r\n  ship_credits: 5,\r\n  used_item_slots: 0,\r\n  max_item_slots: 3,\r\n  ship_stats: {\r\n  base_combat: 2,\r\n  base_diplomacy: 4,\r\n  base_science: 2,\r\n  },\r\n  shipInitialSelect: 1,\r\n  planets_visited: [],\r\n  planets_coordinates: [[0,0]],\r\n  has_won: false,\r\n  no_fuel: false,\r\n  token: localStorage.getItem('TOKEN_KEY')\r\n  }\r\n  \r\n  tokenChange = (myToken) => {\r\n    this.setState({ token: myToken })\r\n    localStorage.setItem('TOKEN_KEY', myToken) \r\n  }\r\n\r\n  clearPlanetFunction = () => {\r\n    this.setState({ planet: {} })\r\n  }\r\n\r\n  applyShipStats = (health, fuel, credits) => {\r\n    console.log(health, fuel, credits)\r\n    const newHealth = this.state.ship_hull + health;\r\n    const newFuel = this.state.ship_fuel + fuel;\r\n    const newCredits = this.state.ship_credits + credits;\r\n   \r\n    this.setState({\r\n      ship_fuel: newFuel,\r\n      ship_hull: newHealth,\r\n      ship_credits:  newCredits,\r\n    })\r\n  }\r\n\r\n  coordinatesInclude = (array, position) => {\r\n    const stringPosition = JSON.stringify(position)\r\n    const isInArray = array.some(item => {\r\n      return JSON.stringify(item) === stringPosition\r\n    })\r\n    return isInArray\r\n  }\r\n\r\n  isMoveInRange = (spaceShipPosition, possiblePosition, attemptedClick) => {\r\n    console.log('ss pos:', spaceShipPosition, 'p pos:', possiblePosition)\r\n\r\n    let position = [possiblePosition[0], possiblePosition[1]]\r\n   \r\n    let coordinates = this.state.planets_coordinates\r\n    console.log(coordinates, 'coordinates')\r\n\r\n    if(!this.coordinatesInclude(this.state.planets_coordinates, position) && this.state.ship_fuel > 0) {\r\n     \r\n      if((spaceShipPosition[0] + 1 === possiblePosition[0] && spaceShipPosition[1] === possiblePosition[1]) || (spaceShipPosition[0] - 1 === possiblePosition[0] && spaceShipPosition[1] === possiblePosition[1])) {\r\n          this.setState({ spaceShipPosition: [possiblePosition[0], possiblePosition[1]]})\r\n      } else if (spaceShipPosition[1] + 1 === possiblePosition[1] && spaceShipPosition[0] === possiblePosition[0]) {\r\n          this.setState({ spaceShipPosition: [possiblePosition[0], possiblePosition[1]], })\r\n      } else {\r\n          console.log('NOT VALID MOVE')\r\n      }\r\n      this.state.planets_coordinates.push([possiblePosition[0], possiblePosition[1]])\r\n      this.setState({ship_fuel: this.state.ship_fuel - 1})\r\n\r\n      this.locationReveal(attemptedClick)\r\n    }\r\n\r\n}\r\n\r\nlocationReveal = async(attemptedClick) => {\r\n    \r\n    if(attemptedClick === 1) {\r\n        let fetchedPlanet = await request.get('https://guarded-reef-50217.herokuapp.com/randomplanet')\r\n        let planet = fetchedPlanet.body\r\n        let planetIndex = Math.floor(Math.random()* fetchedPlanet.body.length)\r\n        while(this.state.planets_visited.includes(planetIndex) && (this.state.planets_visited.length < 4)) {\r\n          planetIndex = Math.floor(Math.random()* fetchedPlanet.body.length)\r\n        }\r\n        console.log(planet)\r\n          let planet_visited_array = this.state.planets_visited\r\n          planet_visited_array.push(planetIndex)\r\n          this.setState({ planet: planet[planetIndex], planets_visited: planet_visited_array })\r\n\r\n        } else if(attemptedClick === 1) {\r\n          this.setState({ planet: { location_name: 'Open space'} })\r\n        } else if(attemptedClick === 2) {\r\n          this.setState({ planet: {} })\r\n\r\n        } else if(attemptedClick === 3) {\r\n          this.setState({ ship_fuel: this.state.ship_fuel + 3, planet: {}})\r\n        } else if(attemptedClick === 4) {\r\n          this.setState({ has_won: true, planet: { location_name: 'Planet: JDXDJ73J39' } })\r\n        }\r\n    }\r\n\r\nhandleSpacePress = async (col, row) => {\r\n    \r\n    let attemptedClick = this.state.grid[col][row]\r\n    let proposedPosition = [col, row]\r\n    if(attemptedClick === 0) {\r\n        proposedPosition = this.state.spaceShipPosition\r\n        console.log('sorry not a good move')\r\n    } else {\r\n        this.setState({ possiblePosition: [col, row] })\r\n    }\r\n    this.isMoveInRange(this.state.spaceShipPosition, proposedPosition, attemptedClick)\r\n}\r\n\r\nupdateShipSelection = (e) => {\r\n  \r\n  this.setState({ shipInitialSelect: e.target.value})\r\n  \r\n}\r\n\r\n\r\n\r\nspaceshipSelectHandle = async(e) => {\r\n  e.preventDefault();\r\n  const shipChoice = await request.get(`https://guarded-reef-50217.herokuapp.com/usership/${this.state.shipInitialSelect}`)\r\n  let userShip = shipChoice.body[0];\r\n  console.log(userShip);\r\n  \r\n  if(this.state.shipInitialSelect === \"1\") {\r\n    const color = await request.get(`http://www.colr.org/json/scheme/11154`)\r\n    const parsedObject = JSON.parse(color.text);\r\n    \r\n    const themeColors = parsedObject.schemes[0].colors;\r\n    const colorScheme = {\r\n      'background_clr': themeColors[3],\r\n      'font_clr':themeColors[1],\r\n      'border_clr': themeColors[2]\r\n    }\r\n    localStorage.setItem('COLOR_SCHEME', JSON.stringify(colorScheme))\r\n    localStorage.setItem('SHIP_NAME', userShip.id);\r\n    \r\n  \r\n  } else if(this.state.shipInitialSelect === \"2\" || this.state.shipInitialSelect === 2) {\r\n    const color = await request.get(`http://www.colr.org/json/scheme/17822`)\r\n    const parsedObject = JSON.parse(color.text);\r\n    console.log(parsedObject);\r\n    const themeColors = parsedObject.schemes[0].colors;\r\n    const colorScheme = {\r\n      'background_clr': themeColors[2],\r\n      'font_clr':themeColors[4],\r\n      'border_clr': themeColors[3]\r\n    }\r\n    localStorage.setItem('COLOR_SCHEME', JSON.stringify(colorScheme))\r\n    localStorage.setItem('SHIP_NAME', userShip.id);\r\n  } else if(this.state.shipInitialSelect === \"3\" || this.state.shipInitialSelect === 3) {\r\n    const color = await request.get(`http://www.colr.org/json/scheme/7078`)\r\n\r\n    const parsedObject = JSON.parse(color.text);\r\n\r\n    const themeColors = parsedObject.schemes[0].colors;\r\n  \r\n    const colorScheme = {\r\n      'background_clr': themeColors[1],\r\n      'font_clr': '#ffffff',\r\n      'border_clr': themeColors[2]\r\n    }\r\n    localStorage.setItem('COLOR_SCHEME', JSON.stringify(colorScheme));\r\n    localStorage.setItem('SHIP_NAME', userShip.id);\r\n  }\r\n\r\n\r\n  this.setState({ ship_name: userShip.ship_name,\r\n                  ship_image: userShip.ship_image,\r\n                  ship_fuel: userShip.ship_fuel,\r\n                  ship_hull: userShip.ship_hull,\r\n                  ship_credits: userShip.shipcredits,\r\n                  ship_stats: { base_combat: userShip.base_combat,\r\n                  base_diplomacy: userShip.base_diplomacy,\r\n                  base_science: userShip.base_science },\r\n                  used_item_slots: userShip.used_item_slots,\r\n                  max_item_slots: userShip.max_item_slots,\r\n                  spaceShipPosition: [2, 0],\r\n                  planets_visited: [],\r\n                  planets_coordinates: [[0,0]],\r\n\r\n                })\r\n  \r\n}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          \r\n          <Switch>\r\n            <Route path='/board' exact render={(routerProps) => <Board \r\n            grid={this.state.grid} \r\n            possiblePosition={this.state.possiblePosition} \r\n            planet={this.state.planet}\r\n            spaceShipPosition={this.state.spaceShipPosition}\r\n            handleSpacePress={this.handleSpacePress}\r\n            hasWon={this.state.has_won}\r\n            shipFuel={this.state.ship_fuel}\r\n            shipHull={this.state.ship_hull}\r\n            shipCredits={this.state.ship_credits}\r\n            {...routerProps}\r\n            />}/>\r\n            <Route path='/characterSelect' render={(routerProps) => <CharacterSelectPage\r\n            submitHandle={this.spaceshipSelectHandle} \r\n            handleChange={this.updateShipSelection}\r\n             {...routerProps}/>}/>\r\n             <Route path='/planet' render={(routerProps) => <PlanetPage \r\n             planet={this.state.planet}\r\n             applyShipStats={this.applyShipStats}\r\n             clearPlanetFunction={this.clearPlanetFunction}\r\n             shipFuel={this.state.ship_fuel}\r\n             shipHull={this.state.ship_hull}\r\n             shipCredits={this.state.ship_credits}\r\n             shipStats={this.state.ship_stats}\r\n             {...routerProps}/>}/>\r\n             <Route path='/' exact render={(routerProps) => <Signup \r\n             tokenChange={this.tokenChange}\r\n             {...routerProps}/>}/>\r\n             <Route path='/signin' render={(routerProps) => <Signin\r\n             tokenChange={this.tokenChange}\r\n             {...routerProps}/>}/>\r\n             <Route path='/gameOver' render={(routerProps) => <GameOver\r\n             token={this.state.token}\r\n             hull={this.state.ship_hull}\r\n             fuel={this.state.ship_fuel}\r\n             {...routerProps}/>}/>\r\n             <Route path='/about' render={(routerProps) => <About \r\n             {...routerProps}/>}/>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}